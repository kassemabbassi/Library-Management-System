# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'afficher_etudiant.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QWidget, QTableWidget, QTableWidgetItem, QPushButton, QVBoxLayout
import csv
from PyQt5.QtWidgets import QApplication, QMessageBox

class Ui_afficher_etudiant(object):
    def __init__(self):
        super().__init__()
    def setupUi(self, afficher_etudiant):
        afficher_etudiant.setObjectName("afficher_etudiant")
        afficher_etudiant.resize(1300, 870)
        afficher_etudiant.setMaximumSize(QtCore.QSize(1300, 870))
        afficher_etudiant.setStyleSheet("")
        self.label = QtWidgets.QLabel(afficher_etudiant)
        self.label.setGeometry(QtCore.QRect(0, 0, 1300, 870))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap(":/ressources/23.jpg"))
        self.label.setScaledContents(True)
        self.label.setObjectName("label")
        self.pushButton = QtWidgets.QPushButton(afficher_etudiant)
        self.pushButton.setGeometry(QtCore.QRect(490, 740, 221, 41))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.load_csv)
        self.label_2 = QtWidgets.QLabel(afficher_etudiant)
        self.label_2.setGeometry(QtCore.QRect(418, 80, 391, 51))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label_2.setObjectName("label_2")
        self.tableWidget = QtWidgets.QTableWidget(afficher_etudiant)
        self.tableWidget.setGeometry(QtCore.QRect(20, 190, 1261, 491))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.tableWidget.setFont(font)
        self.tableWidget.setStyleSheet("")
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(9)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(7, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(8, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(136)

        self.retranslateUi(afficher_etudiant)
        QtCore.QMetaObject.connectSlotsByName(afficher_etudiant)
    def load_csv(self):
        csv_file = "students.csv"
        # Chargement du fichier CSV
        with open(csv_file, newline='') as csvfile:
            reader = csv.reader(csvfile, delimiter=',', quotechar='"')
            # Ajout des en-têtes de colonne
            header = next(reader)
            self.tableWidget.setColumnCount(len(header))
            self.tableWidget.setHorizontalHeaderLabels(header)
            # Ajout des données dans le QTableWidget
            self.tableWidget.setRowCount(0)
            for row_data in reader:
                row = self.tableWidget.rowCount()
                self.tableWidget.insertRow(row)
                for column, item in enumerate(row_data):
                    self.tableWidget.setItem(row, column, QTableWidgetItem(item))
            if self.tableWidget.rowCount() == 0:
                # Afficher une erreur dans un QMessageBox
                QMessageBox.warning(None, "Erreur", "Le fichier students.csv est vide.")

    def retranslateUi(self, afficher_etudiant):
        _translate = QtCore.QCoreApplication.translate
        afficher_etudiant.setWindowTitle(_translate("afficher_etudiant", "Form"))
        self.pushButton.setText(_translate("afficher_etudiant", "afficher"))
        self.label_2.setText(_translate("afficher_etudiant", "Tableau des étudiants"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("afficher_etudiant", "Numero inscription"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("afficher_etudiant", "Nom"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("afficher_etudiant", "Prenom"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("afficher_etudiant", "Date Naissance"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("afficher_etudiant", "Adresse"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("afficher_etudiant", "Mail"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("afficher_etudiant", "Telephone"))
        item = self.tableWidget.horizontalHeaderItem(7)
        item.setText(_translate("afficher_etudiant", "Section"))
        item = self.tableWidget.horizontalHeaderItem(8)
        item.setText(_translate("afficher_etudiant", "Niveau Etude"))
import ressources


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    afficher_etudiant = QtWidgets.QWidget()
    ui = Ui_afficher_etudiant()
    ui.setupUi(afficher_etudiant)
    afficher_etudiant.show()
    sys.exit(app.exec_())
