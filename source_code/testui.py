# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'testui.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os
from PyQt5.QtCore import QUrl
from PyQt5.QtWidgets import QHBoxLayout , QVBoxLayout

from PyQt5 import QtCore, QtGui, QtWidgets

from PyQt5.QtMultimedia import QMediaPlayer, QMediaContent
class Ui_test(object):
    def setupUi(self, test):
        test.setObjectName("test")
        test.resize(400, 300)
        test.setMaximumSize(QtCore.QSize(400, 300))
        test.setStyleSheet("background-color: rgb(11, 11, 11);\n"
"color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(test)
        self.label.setGeometry(QtCore.QRect(140, 20, 121, 31))
        font = QtGui.QFont()
        font.setPointSize(22)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.comboBox = QtWidgets.QComboBox(test)
        self.comboBox.setGeometry(QtCore.QRect(200, 100, 171, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.comboBox.setFont(font)
        self.comboBox.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.comboBox.setObjectName("comboBox")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.comboBox.addItem("")
        self.label_2 = QtWidgets.QLabel(test)
        self.label_2.setGeometry(QtCore.QRect(20, 110, 121, 16))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.pushButton = QtWidgets.QPushButton(test)
        self.pushButton.setGeometry(QtCore.QRect(70, 210, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.playaudiofile)
        self.pushButton_2 = QtWidgets.QPushButton(test)
        self.pushButton_2.setGeometry(QtCore.QRect(210, 210, 93, 28))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.volumemute)
        

        self.retranslateUi(test)
        QtCore.QMetaObject.connectSlotsByName(test)
        self.player=QMediaPlayer()
    def playaudiofile(self):
        music=self.comboBox.currentText()
        full_file_path=os.path.join(os.getcwd(),music)
        url=QUrl.fromLocalFile(full_file_path)
        content=QMediaContent(url)
        self.player.setMedia(content)
        self.player.play()
    def volumemute(self):
        self.player.setMuted(not self.player.isMuted())
        

    def retranslateUi(self, test):
        _translate = QtCore.QCoreApplication.translate
        test.setWindowTitle(_translate("test", "Form"))
        self.label.setText(_translate("test", "Music"))
        
        self.comboBox.setItemText(1, _translate("test", "devil.mp3"))
        self.comboBox.setItemText(2, _translate("test", "got.mp3"))
        self.comboBox.setItemText(3, _translate("test", "koko.mp3"))
        self.comboBox.setItemText(3, _translate("test", "relax.mp3"))
        self.label_2.setText(_translate("test", "Choose one"))
        self.pushButton.setText(_translate("test", "Play"))
        self.pushButton_2.setText(_translate("test", "Mute"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    test = QtWidgets.QWidget()
    ui = Ui_test()
    ui.setupUi(test)
    test.show()
    sys.exit(app.exec_())
