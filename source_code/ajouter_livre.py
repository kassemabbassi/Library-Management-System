# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'ajouter_livre.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import os.path
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMessageBox
import csv
import ressources

class Ui_ajouter_livre(object):
    def __init__(self):
        self.diclivres = {}
    def setupUi(self, ajouter_livre):
        ajouter_livre.setObjectName("ajouter_livre")
        ajouter_livre.resize(1024, 840)
        ajouter_livre.setStyleSheet("background-color: qlineargradient(spread:repeat, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(18, 178, 255, 254), stop:1 rgba(255, 255, 255, 255));\n"
"background-image: url(:/ressources/23.jpg);\n"
"background-color: rgb(54, 54, 54);\n"
"color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(ajouter_livre)
        self.label.setGeometry(QtCore.QRect(250, 180, 151, 33))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(16)
        self.label.setFont(font)
        self.label.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(ajouter_livre)
        self.label_2.setGeometry(QtCore.QRect(250, 260, 55, 33))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(16)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label_2.setObjectName("label_2")
        self.label_3 = QtWidgets.QLabel(ajouter_livre)
        self.label_3.setGeometry(QtCore.QRect(250, 340, 148, 33))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(16)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(ajouter_livre)
        self.label_4.setGeometry(QtCore.QRect(250, 430, 186, 33))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(16)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label_4.setObjectName("label_4")
        self.label_5 = QtWidgets.QLabel(ajouter_livre)
        self.label_5.setGeometry(QtCore.QRect(250, 510, 166, 33))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(16)
        self.label_5.setFont(font)
        self.label_5.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label_5.setObjectName("label_5")
        self.ll1 = QtWidgets.QLineEdit(ajouter_livre)
        self.ll1.setGeometry(QtCore.QRect(521, 187, 205, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ll1.setFont(font)
        self.ll1.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.ll1.setObjectName("ll1")
        self.ll2 = QtWidgets.QLineEdit(ajouter_livre)
        self.ll2.setGeometry(QtCore.QRect(521, 270, 205, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ll2.setFont(font)
        self.ll2.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.ll2.setObjectName("ll2")
        self.ll3 = QtWidgets.QLineEdit(ajouter_livre)
        self.ll3.setGeometry(QtCore.QRect(521, 353, 205, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ll3.setFont(font)
        self.ll3.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.ll3.setObjectName("ll3")
        self.ll4 = QtWidgets.QLineEdit(ajouter_livre)
        self.ll4.setGeometry(QtCore.QRect(521, 436, 205, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ll4.setFont(font)
        self.ll4.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.ll4.setObjectName("ll4")
        self.ll5 = QtWidgets.QLineEdit(ajouter_livre)
        self.ll5.setGeometry(QtCore.QRect(521, 519, 205, 30))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.ll5.setFont(font)
        self.ll5.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.ll5.setObjectName("ll5")
        self.ajoutlivre = QtWidgets.QPushButton(ajouter_livre)
        self.ajoutlivre.clicked.connect(self.ajout_livre)
        self.ajoutlivre.setGeometry(QtCore.QRect(390, 650, 191, 41))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(16)
        self.ajoutlivre.setFont(font)
        self.ajoutlivre.setStyleSheet("color: rgb(54, 54, 54);\n"
"color: rgb(255, 255, 255);\n"
"background-color: rgb(255, 255, 255);\n"
"\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.ajoutlivre.setObjectName("ajoutlivre")
        self.label_6 = QtWidgets.QLabel(ajouter_livre)
        self.label_6.setGeometry(QtCore.QRect(350, 60, 401, 61))
        font = QtGui.QFont()
        font.setPointSize(24)
        self.label_6.setFont(font)
        self.label_6.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"\n"
"border-radius:10px")
        self.label_6.setObjectName("label_6")

        self.retranslateUi(ajouter_livre)
        QtCore.QMetaObject.connectSlotsByName(ajouter_livre)
    def ajout_livre(self):
        while True:
            reference=self.ll1.text()
            titre=self.ll2.text()
            if not(titre.isalpha() and len(titre)<=20):
                QMessageBox.critical(None, "Erreur", "Le titre doit etre alphabetique et ne dépasse pas le 20 caractéres")
                break
            nom_auteur=self.ll3.text()
            if not(nom_auteur.isalpha() and len(nom_auteur)<=20):
                QMessageBox.critical(None, "Erreur", "Le nom de l'auteur doit etre alphabetique et au maximum 20 caractéres")
                break
            prenom_auteur=self.ll4.text()
            if not(prenom_auteur.isalpha() and len(prenom_auteur)<=20):
                QMessageBox.critical(None, "Erreur", "Le prenom de l'auteur doit etre alphabetique et au maximum 20 caractéres")
                break
            annee_edition=self.ll5.text()
            if not(annee_edition.isdigit() and len(annee_edition)==4 and  int(annee_edition)<=2023 ):
                QMessageBox.critical(None, "Erreur", "L'année doit etre 4 chiffres et inférieure a 2023")
                break
            self.diclivres[reference]=[titre,nom_auteur,prenom_auteur,annee_edition]
            if not os.path.exists('livres.csv'):
                with open('livres.csv', mode='w', newline='') as file:
                    fieldnames = ['reference', 'titre', 'nom_auteur', 'prenom_auteur', 'annee_edition']
                    writer = csv.DictWriter(file, fieldnames=fieldnames, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
                    writer.writeheader()
            with open('livres.csv', mode='r', newline='') as file:
                reader = csv.DictReader(file, delimiter=',', quotechar='"')
                for row in reader:
                    if row['reference'] == reference:
                        QMessageBox.information(None, "Erreur", f"Le reference {reference} existe déjà dans notre base de données")
                        return
                else:
                     with open('livres.csv', mode='a', newline='') as file:
                         fieldnames = ['reference', 'titre', 'nom_auteur', 'prenom_auteur', 'annee_edition']
                         writer = csv.DictWriter(file, fieldnames=fieldnames, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
                         writer.writerow({
                             'reference': reference,
                             'titre': titre,
                             'nom_auteur': nom_auteur,
                             'prenom_auteur': prenom_auteur,
                             'annee_edition': annee_edition,})
                         QMessageBox.information(None,"information","Les informations ont été enregistrées dans le fichier livres.csv.",)
                         break
                return self.diclivres
                
                    
                    
           
            
        

    def retranslateUi(self, ajouter_livre):
        _translate = QtCore.QCoreApplication.translate
        ajouter_livre.setWindowTitle(_translate("ajouter_livre", "Form"))
        self.label.setText(_translate("ajouter_livre", "Référence"))
        self.label_2.setText(_translate("ajouter_livre", "Titre"))
        self.label_3.setText(_translate("ajouter_livre", "Nom_auteur"))
        self.label_4.setText(_translate("ajouter_livre", "Prénom_auteur"))
        self.label_5.setText(_translate("ajouter_livre", "année_édition"))
        self.ajoutlivre.setText(_translate("ajouter_livre", "ajouter"))
        self.label_6.setText(_translate("ajouter_livre", "Ajout des livres"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ajouter_livre = QtWidgets.QWidget()
    ui = Ui_ajouter_livre()
    ui.setupUi(ajouter_livre)
    ajouter_livre.show()
    sys.exit(app.exec_())
