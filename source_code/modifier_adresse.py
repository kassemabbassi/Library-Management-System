# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'modifier_adresse.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

from PyQt5.QtWidgets import QApplication, QMessageBox
import csv
import ressources
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_modifier_adresse(object):
    def setupUi(self, modifier_adresse):
        modifier_adresse.setObjectName("modifier_adresse")
        modifier_adresse.resize(1024, 840)
        modifier_adresse.setStyleSheet("background-color: qlineargradient(spread:repeat, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(18, 178, 255, 254), stop:1 rgba(255, 255, 255, 255));\n"
"background-image: url(:/ressources/23.jpg);\n"
"background-color: rgb(54, 54, 54);\n"
"color: rgb(255, 255, 255);")
        self.label = QtWidgets.QLabel(modifier_adresse)
        self.label.setGeometry(QtCore.QRect(110, 270, 361, 31))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(18)
        self.label.setFont(font)
        self.label.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label.setObjectName("label")
        self.modifadresse = QtWidgets.QPushButton(modifier_adresse)
        self.modifadresse.setGeometry(QtCore.QRect(360, 560, 261, 41))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(16)
        self.modifadresse.setFont(font)
        self.modifadresse.setStyleSheet("color: rgb(54, 54, 54);\n"
"background-color: rgb(255, 255, 255);\n"
"\n"
"\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.modifadresse.setObjectName("modifadresse")
        self.modifadresse.clicked.connect(self.modifier_adresse)
        self.lmodifadresse = QtWidgets.QLineEdit(modifier_adresse)
        self.lmodifadresse.setGeometry(QtCore.QRect(550, 280, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lmodifadresse.setFont(font)
        self.lmodifadresse.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.lmodifadresse.setObjectName("lmodifadresse")
        self.label_2 = QtWidgets.QLabel(modifier_adresse)
        self.label_2.setGeometry(QtCore.QRect(110, 390, 371, 71))
        font = QtGui.QFont()
        font.setFamily("Bahnschrift SemiLight")
        font.setPointSize(18)
        self.label_2.setFont(font)
        self.label_2.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label_2.setObjectName("label_2")
        self.lineEdit = QtWidgets.QLineEdit(modifier_adresse)
        self.lineEdit.setGeometry(QtCore.QRect(550, 420, 181, 31))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"border:2px solid white;\n"
"border-radius:10px")
        self.lineEdit.setObjectName("lineEdit")
        self.label_3 = QtWidgets.QLabel(modifier_adresse)
        self.label_3.setGeometry(QtCore.QRect(320, 140, 371, 41))
        font = QtGui.QFont()
        font.setFamily("Agency FB")
        font.setPointSize(24)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("background:transparent;\n"
"color: rgb(255, 255, 255);\n"
"\n"
"border-radius:10px")
        self.label_3.setObjectName("label_3")

        self.retranslateUi(modifier_adresse)
        QtCore.QMetaObject.connectSlotsByName(modifier_adresse)
    def modifier_adresse(self):
        ancienne_adresse = self.lmodifadresse.text()
        nouvelle_adresse = self.lineEdit.text()
        if not(ancienne_adresse.isalpha() and nouvelle_adresse.isalpha()  ):
            QMessageBox.critical(None, "Erreur", "Les adresses doivent etre alphabétiques")
            return
        with open('students.csv', mode='r') as file:
            # Read the contents of the file
            reader = csv.DictReader(file)
            rows = [row for row in reader]
        found_student = False
        for row in rows:
            if row['adresse'] == ancienne_adresse:
                row['adresse'] = nouvelle_adresse
                found_student = True
                break
        if not found_student:
            QMessageBox.information(None, "information", f"Aucun étudiant avec cette adresse {ancienne_adresse}  dans notre base de données")
            return
        with open('students.csv', mode='w', newline='') as file:
            fieldnames = ['numero_inscription', 'nom', 'prenom', 'date_naissance', 'adresse', 'mail', 'telephone', 'section', 'niveau_etude']
            writer = csv.DictWriter(file, fieldnames=fieldnames, delimiter=',', quotechar='"', quoting=csv.QUOTE_MINIMAL)
            writer.writeheader()
            writer.writerows(rows)
        
        QMessageBox.information(None, "Information", f"L'ancienne adresse {ancienne_adresse} a été modifié avec succès par {nouvelle_adresse}")

    def retranslateUi(self, modifier_adresse):
        _translate = QtCore.QCoreApplication.translate
        modifier_adresse.setWindowTitle(_translate("Modifier_Adresse", "Form"))
        self.label.setText(_translate("Modifier_Adresse", "Entrer l\'ancienne  adresse"))
        self.modifadresse.setText(_translate("Modifier_Adresse", "Modifier"))
        self.label_2.setText(_translate("Modifier_Adresse", "Entrer la nouvelle Adresse"))
        self.label_3.setText(_translate("Modifier_Adresse", "Modification par Adresse"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    modifier_adresse = QtWidgets.QWidget()
    ui = Ui_modifier_adresse()
    ui.setupUi(modifier_adresse)
    modifier_adresse.show()
    sys.exit(app.exec_())
